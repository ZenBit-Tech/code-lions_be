import { MIN_PASSWORD_LENGTH, VERIFICATION_CODE_LENGTH } from 'src/config';

export const Errors = {
  CODE_LENGTH: `Otp must be exactly ${VERIFICATION_CODE_LENGTH} characters long`,
  DIGITS_ONLY: 'Otp must contain only digits',
  EMAIL_ALREADY_VERIFIED: 'Email already verified',
  FAILED_TO_CHANGE_PASSWORD: 'Failed to change password',
  FAILED_TO_CONFIRM_USER: 'Failed to confirm a user',
  FAILED_TO_CREATE_USER: 'Failed to create a user',
  FAILED_TO_DELETE_USER: 'Failed to delete a user',
  FAILED_TO_FETCH_USER_BY_EMAIL: 'Failed to fetch the user by email',
  FAILED_TO_FETCH_USER_BY_ID: 'Failed to fetch the user by id',
  FAILED_TO_FETCH_USERS: 'Failed to fetch users',
  FAILED_TO_HASH: 'Failed to hash the password',
  FAILED_TO_SEND_FORGET_PASSWORD_EMAIL: 'Failed to send forgot password email',
  FAILED_TO_SEND_VERIFICATION_EMAIL: 'Failed to send verification email',
  FAILED_TO_SAVE_VERIFICATION_CODE: 'Failed to save verification code',
  INTERNAL_SERVER_ERROR: 'Internal server error',
  INVALID_CREDENTIALS: 'Invalid email or password',
  INVALID_EMAIL: 'Invalid email',
  INVALID_PASSWORD: 'Invalid password',
  INVALID_REFRESH_TOKEN: 'Invalid refresh token',
  INVALID_TOKEN:
    'You are not authorized to access this resource, valid token is required',
  INVALID_USER_ID: 'Invalid user id',
  MISSING_CREDENTIALS: 'Missing credentials',
  NAME_IS_STRING: 'Name must be a string',
  PASSWORD_IS_STRING: 'Password must be a string',
  PASSWORD_LENGTH: `Password must be at least ${MIN_PASSWORD_LENGTH} characters long`,
  REFRESH_TOKEN_SHOULD_BE_JWT:
    'Refresh token should be a string with valid jwt token',
  ROUTE_IS_FORBIDDEN: 'This route is forbidden for unauthorized users',
  USER_DOES_NOT_EXIST: 'User with this email does not exist',
  USER_EXISTS: 'User with this email already exists',
  USERS_NAME_CANNOT_BE_EMPTY: "User's name cannot be empty",
  USER_NOT_FOUND: 'User not found',
  USER_NOT_VERIFIED: 'User not verified email yet',
  WRONG_CODE: 'Wrong or expired OTP code',
  FAILED_TO_CREATE_USER_VIA_GOOGLE: 'Failed to create user via google',
  INVALID_GOOGLE_TOKEN: 'Invalid Google token payload',
  INVALID_GOOGLE_ID: 'Invalid google id',
};
